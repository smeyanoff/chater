// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Log in a user and return a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log in a user",
                "parameters": [
                    {
                        "description": "User Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.tokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user with username, email, and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.registerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.successResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/chats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of all chats that the authenticated user participates in, including chat members and recent messages.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Get all chats for the authenticated user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.chatsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        },
        "/chats/{chat_id}/messages": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список всех сообщений в чате по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Получение сообщений чата",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID чата",
                        "name": "chat_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список сообщений",
                        "schema": {
                            "$ref": "#/definitions/api.messagesResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка в запросе",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка на стороне сервера",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Позволяет отправить сообщение в чат, указав идентификатор чата и текст сообщения",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Отправка сообщения в чат",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID чата",
                        "name": "chat_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для отправки сообщения",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.sendMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное отправленное сообщение",
                        "schema": {
                            "$ref": "#/definitions/api.messageResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка в запросе",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка на стороне сервера",
                        "schema": {
                            "$ref": "#/definitions/api.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.chatMemberResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Идентификатор пользователя",
                    "type": "integer"
                },
                "username": {
                    "description": "Имя пользователя",
                    "type": "string"
                }
            }
        },
        "api.chatResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Время создания чата",
                    "type": "string"
                },
                "id": {
                    "description": "Идентификатор чата",
                    "type": "integer"
                },
                "members": {
                    "description": "Список участников чата",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.chatMemberResponse"
                    }
                },
                "messages": {
                    "description": "Последние сообщения чата",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.messageResponse"
                    }
                },
                "name": {
                    "description": "Название чата",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Время последнего обновления чата",
                    "type": "string"
                }
            }
        },
        "api.chatsResponse": {
            "type": "object",
            "properties": {
                "chats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.chatResponse"
                    }
                }
            }
        },
        "api.errorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "api.loginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "description": "Пароль пользователя",
                    "type": "string"
                },
                "username": {
                    "description": "Имя пользователя",
                    "type": "string"
                }
            }
        },
        "api.messageResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Содержание сообщения",
                    "type": "string"
                },
                "created_at": {
                    "description": "Время отправки сообщения",
                    "type": "string"
                },
                "id": {
                    "description": "Идентификатор сообщения",
                    "type": "integer"
                },
                "sender": {
                    "description": "Имя отправителя",
                    "type": "string"
                },
                "sender_id": {
                    "description": "Идентификатор отправителя",
                    "type": "integer"
                }
            }
        },
        "api.messagesResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.messageResponse"
                    }
                }
            }
        },
        "api.registerRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "description": "Емейл пользователя",
                    "type": "string"
                },
                "password": {
                    "description": "Пароль пользователя",
                    "type": "string"
                },
                "username": {
                    "description": "Имя пользователя",
                    "type": "string"
                }
            }
        },
        "api.sendMessageRequest": {
            "type": "object",
            "required": [
                "chat_id",
                "content"
            ],
            "properties": {
                "chat_id": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                }
            }
        },
        "api.successResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api.tokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:54321",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "ChatGPT Backend API",
	Description:      "This is a sample server for a chat backend with JWT authentication.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

basePath: /
definitions:
  api.chatResponse:
    properties:
      createdAt:
        description: Время создания чата
        type: string
      id:
        description: Идентификатор чата
        type: integer
      members:
        description: Список участников чата
        items:
          $ref: '#/definitions/api.memberResponse'
        type: array
      messages:
        description: Последние сообщения чата
        items:
          $ref: '#/definitions/api.messageResponse'
        type: array
      name:
        description: Название чата
        type: string
      updatedAt:
        description: Время последнего обновления чата
        type: string
    type: object
  api.chatsResponse:
    properties:
      chats:
        description: Чаты
        items:
          $ref: '#/definitions/api.chatResponse'
        type: array
    type: object
  api.createChatRequest:
    properties:
      name:
        description: Название чата
        type: string
    required:
    - name
    type: object
  api.createGroupRequest:
    properties:
      name:
        description: Название группы
        type: string
    required:
    - name
    type: object
  api.errorResponse:
    properties:
      error:
        type: string
    type: object
  api.groupResponse:
    properties:
      id:
        type: integer
      isOwner:
        type: boolean
      members:
        items:
          $ref: '#/definitions/api.memberResponse'
        type: array
      name:
        type: string
    type: object
  api.loginRequest:
    properties:
      password:
        description: Пароль пользователя
        type: string
      username:
        description: Имя пользователя
        type: string
    required:
    - password
    - username
    type: object
  api.memberResponse:
    properties:
      id:
        description: Идентификатор пользователя
        type: integer
      username:
        description: Имя пользователя
        type: string
    type: object
  api.messageResponse:
    properties:
      content:
        description: Содержание сообщения
        type: string
      createdAt:
        description: Время отправки сообщения
        type: string
      id:
        description: Идентификатор сообщения
        type: integer
      isCurrent:
        description: Сообщение отправлено текущим пользователем
        type: boolean
      sender:
        description: Имя отправителя
        type: string
      senderID:
        description: Идентификатор отправителя
        type: integer
    type: object
  api.messagesResponse:
    properties:
      messages:
        description: Сообщения чата
        items:
          $ref: '#/definitions/api.messageResponse'
        type: array
    type: object
  api.registerRequest:
    properties:
      email:
        description: Емейл пользователя
        type: string
      password:
        description: Пароль пользователя
        type: string
      username:
        description: Имя пользователя
        type: string
    required:
    - email
    - password
    - username
    type: object
  api.successResponse:
    properties:
      message:
        type: string
    type: object
  api.userGroupRequest:
    properties:
      user_id:
        type: integer
    required:
    - user_id
    type: object
host: localhost:54321
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a chat backend with JWT authentication.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: ChatGPT Backend API
  version: "1.0"
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Log in a user and return a JWT token
      parameters:
      - description: User Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/api.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.successResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Log in a user
      tags:
      - Auth
      - V1
  /v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with username, email, and password
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api.registerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.successResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Register a new user
      tags:
      - Auth
      - V1
  /v1/chats:
    get:
      description: Returns a list of all chats that the authenticated user participates
        in, including chat members and recent messages.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.chatsResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - BearerAuth: []
      summary: Get all chats for the authenticated user
      tags:
      - Chats
      - V1
    post:
      consumes:
      - application/json
      description: Создаёт новый чат с указанным именем и возвращает его данные
      parameters:
      - description: Данные для создания чата
        in: body
        name: chat
        required: true
        schema:
          $ref: '#/definitions/api.createChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Информация о созданном чате
          schema:
            $ref: '#/definitions/api.chatResponse'
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Ошибка на сервере
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - BearerAuth: []
      summary: Создание нового чата
      tags:
      - Chats
      - V1
  /v1/chats/{chat_id}/messages:
    get:
      description: Возвращает список всех сообщений в чате по его ID
      parameters:
      - description: ID чата
        in: path
        name: chat_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список сообщений
          schema:
            $ref: '#/definitions/api.messagesResponse'
        "400":
          description: Ошибка в запросе
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Ошибка на стороне сервера
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - BearerAuth: []
      summary: Получение сообщений чата
      tags:
      - Messages
      - V1
  /v1/chats/{chat_id}/ws:
    get:
      description: Подключитесь к WebSocket для получения и отправки сообщений в чате
        в реальном времени.
      parameters:
      - description: Chat ID
        in: path
        name: chat_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "101":
          description: WebSocket connection established
          schema:
            type: string
        "400":
          description: Invalid Chat ID
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Failed to upgrade connection
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Подключение к WebSocket для чата
      tags:
      - WebSocket
      - Messages
      - V1
  /v1/groups:
    post:
      consumes:
      - application/json
      description: Создает новую группу с указанным именем для авторизованного пользователя
      parameters:
      - description: Данные для создания группы
        in: body
        name: createGroupRequest
        required: true
        schema:
          $ref: '#/definitions/api.createGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Группа успешно создана
          schema:
            $ref: '#/definitions/api.groupResponse'
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Ошибка при создании группы
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - BearerAuth: []
      summary: Создание группы
      tags:
      - Groups
      - v1
  /v1/groups/{group_id}:
    delete:
      description: Удаляет группу по её идентификатору, если пользователь является
        её владельцем
      parameters:
      - description: ID группы для удаления
        in: path
        name: group_id
        required: true
        type: string
      responses:
        "200":
          description: Группа успешно удалена
          schema:
            $ref: '#/definitions/api.successResponse'
        "400":
          description: Неверный идентификатор группы
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Ошибка при удалении группы
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - BearerAuth: []
      summary: Удаление группы
      tags:
      - Groups
      - V1
  /v1/groups/{group_id}/users:
    delete:
      consumes:
      - application/json
      description: Удаляет указанного пользователя из группы, если действие выполняет
        владелец или администратор группы
      parameters:
      - description: ID группы
        in: path
        name: group_id
        required: true
        type: string
      - description: ID пользователя для удаления из группы
        in: body
        name: userGroupRequest
        required: true
        schema:
          $ref: '#/definitions/api.userGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь успешно удалён из группы
          schema:
            $ref: '#/definitions/api.successResponse'
        "400":
          description: Неверный запрос или неверный ID группы
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Ошибка при удалении пользователя из группы
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - BearerAuth: []
      summary: Удаление пользователя из группы
      tags:
      - Groups
      - V1
    post:
      consumes:
      - application/json
      description: Добавляет пользователя в группу по идентификатору группы
      parameters:
      - description: ID группы
        in: path
        name: group_id
        required: true
        type: string
      - description: Данные для добавления пользователя
        in: body
        name: addUserToGroupRequest
        required: true
        schema:
          $ref: '#/definitions/api.userGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь успешно добавлен в группу
          schema:
            $ref: '#/definitions/api.successResponse'
        "400":
          description: Неверный запрос или неверный ID группы
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Ошибка при добавлении пользователя в группу
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - BearerAuth: []
      summary: Добавление пользователя в группу
      tags:
      - Groups
      - V1
securityDefinitions:
  BearerAuth:
    in: cookie
    name: token
    type: apiKey
swagger: "2.0"

basePath: /
definitions:
  api.chatMember:
    properties:
      id:
        description: Идентификатор пользователя
        type: integer
      username:
        description: Имя пользователя
        type: string
    type: object
  api.chatResponse:
    properties:
      created_at:
        description: Время создания чата
        type: string
      id:
        description: Идентификатор чата
        type: integer
      members:
        description: Список участников чата
        items:
          $ref: '#/definitions/api.chatMember'
        type: array
      messages:
        description: Последние сообщения чата
        items:
          $ref: '#/definitions/api.messageDetail'
        type: array
      name:
        description: Название чата
        type: string
      updated_at:
        description: Время последнего обновления чата
        type: string
    type: object
  api.chatsResponse:
    properties:
      chats:
        items:
          $ref: '#/definitions/api.chatResponse'
        type: array
    type: object
  api.errorResponse:
    properties:
      error:
        type: string
    type: object
  api.loginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  api.messageDetail:
    properties:
      content:
        description: Содержание сообщения
        type: string
      created_at:
        description: Время отправки сообщения
        type: string
      id:
        description: Идентификатор сообщения
        type: integer
      sender:
        description: Имя отправителя
        type: string
      sender_id:
        description: Идентификатор отправителя
        type: integer
    type: object
  api.registerRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  api.successResponse:
    properties:
      message:
        type: string
    type: object
  api.tokenResponse:
    properties:
      token:
        type: string
    type: object
host: localhost:54321
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a chat backend with JWT authentication.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: ChatGPT Backend API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Log in a user and return a JWT token
      parameters:
      - description: User Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/api.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Log in a user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with username, email, and password
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api.registerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.successResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Register a new user
      tags:
      - auth
  /chats:
    get:
      description: Returns a list of all chats that the authenticated user participates
        in, including chat members and recent messages.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.chatsResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - BearerAuth: []
      summary: Get all chats for the authenticated user
      tags:
      - chats
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
